uri: upload-document-verification
token: vhbx4a
components:
  layoutWithSidebar: !include ../layouts/with-sidebar.yml
  imagePreview: !include ../components/image-preview.yml
  acuantUpload: !include ../components/acuant-upload.yml
styles:
  - !include ../styles/upload-document-verification-vhbx4a.less
analytics:
  form:
    initialized:
      eventName: "Opened"
      data: { field: "Form" }
  page:
    enter:
      eventName: "Viewed"
      data: { field: "Page" }
    leave:
      eventName: "Completed"
      data: { field: "Page" }
  fields:
    idCardFront:
      click:
        eventName: "Clicked"
        data:
          field: "Front ID"
      change:
        eventName: "Input"
        data:
          field: "Front ID"
      accepted:
        eventName: "Result"
        data:
          field: "Front ID"
          result: "accepted"
      rejected:
        eventName: "Result"
        data:
          field: "Front ID"
          result: "rejected"
    idCardBack:
      click:
        eventName: "Clicked"
        data:
          field: "Back ID"
      change:
        eventName: "Input"
        data:
          field: "Back ID"
      accepted:
        eventName: "Result"
        data:
          field: "Back ID"
          result: "accepted"
      rejected:
        eventName: "Result"
        data:
          field: "Back ID"
          result: "rejected"

    selfie:
      click:
        eventName: "Clicked"
        data:
          field: "Selfie"
      change:
        eventName: "Input"
        data:
          field: "Selfie"
      accepted:
        eventName: "Result"
        data:
          field: "Selfie"
          result: "accepted"
      rejected:
        eventName: "Result"
        data:
          field: "Selfie"
          result: "rejected"

schema:
  required:
    - idCardFront

    - selfie

  properties:
    idCardFront:
      type: array
      minItems: 1
  errorMessage:
    _: !expression |
      (function() {
        return t('errors.requiredField')
      })()
defaults:
  idCardLabel: !expression |
    {
      ['PP']: t('pages.document-verification.documentType.passport'),
      ['ID']: t('pages.document-verification.documentType.government-id'),
      ['DL']: t('pages.document-verification.documentType.drivers-license'),
      ['RP']: t('pages.document-verification.documentType.residence-permit')
    }[flow.export.documentType]
  handoffMobile: !expression "flow.export.mobile"
locals:
  handoffPage: true
items:
  # Creates documentInstanceId
  - !component as: Trigger
    load: !function |
      flow.function.getAssureIdOAuthToken({assureIdRegion: globals.assureIdRegion, authType: "BEARER"})
        .then((res) => {
          if(!res.result.token || !res.result.url) {
            console.error("Token or URL missing...")
            return
          }
          globals.assureIdOAuthToken = res.result.token
          page.storage.set("assureIdOAuthToken", res.result.token)
          page.storage.set("assureIdOAuthUrl", res.result.url)
          flow.function.createDocumentInstanceId({
            assureIdRegion: globals.assureIdRegion,
          })
          .then((result) => {
            page.storage.set("documentInstanceId", result.result.documentInstanceId)
            globals.documentInstanceId = result.result.documentInstanceId
            form.changeValue('documentInstanceId',  result.result.documentInstanceId);
          })
          .catch((err) => console.error("createDocumentInstanceId error: ", err))
        }).catch((err) => console.error("getAssureIdOAuthToken error: ", err))
  # Get recaptcha token
  - !component as: Trigger
    load: !function |
      if(globals?.recaptcha?.recaptchaShowSms) {
        form.addTags(['showSendSMS'])
      }
  # Change document type confirmation
  - !component as: Modal
    tag: changeDocumentTypeModal
    className: switchDocumentConfirm
    shouldCloseOnEscClick: true
    shouldCloseOnOverlayClick: true
    closeButton: true
    items:
      - !component as: Heading
        items: !t 'pages.document-verification.confirmChange.title'
      - !component as: Paragraph
        items: !t 'pages.document-verification.confirmChange.text'
      - !component as: Button
        onClick: !function "form.removeTags(['changeDocumentTypeModal'])"
        text: !t 'pages.document-verification.confirmChange.reject'
      - !component as: div
        className: center
        items:
          - !component as: LinkButton
            actionName: flowBack
            notValidated: true
            text: !t 'pages.document-verification.confirmChange.continue'
  # Layout
  - !ref components: layoutWithSidebar
    omitBackButton: true
    items:
      # upload
      - !component as: VisibilityWrapper
        visible: !expression "device.isMobile || form.hasTags(['handoffBypass'])"
        items:
          # document
          - !component as: Heading
            items: !expression "t('pages.document-verification.documentTitle', { label:
              form.data.idCardLabel || 'Document' })"

          # show only for handoff
          - !component as: VisibilityWrapper
            visible: !expression "(device.isMobile && !flow.export.isDesktop) || device.isDesktop"
            items:
              - !component as: div
                className: "row"
                items:
                  - !component as: Icon
                    kind: !expression |
                      {
                        ['PP']: 'doc-passport',
                        ['ID']: 'doc-id',
                        ['DL']: 'doc-license',
                        ['RP']:  'doc-residence'
                      }[flow?.export.documentType]
                    size: 30
                    className: documentIcon

                  - !component as: div
                    className: switchDocument
                    items:
                      - !component as: div
                        className: switchDocument-name
                        items:
                          - !expression |
                            {"AF":"Afghanistan","AL":"Albania","DZ":"Algeria","AS":"American Samoa","AD":"Andorra","AO":"Angola","AI":"Anguilla","AQ":"Antarctica","AG":"Antigua and Barbuda","AR":"Argentina","AM":"Armenia","AW":"Aruba","AU":"Australia","AT":"Austria","AX":"Åland Islands","AZ":"Azerbaijan","BS":"Bahamas","BH":"Bahrain","BD":"Bangladesh","BB":"Barbados","BY":"Belarus","BE":"Belgium","BZ":"Belize","BJ":"Benin","BM":"Bermuda","BT":"Bhutan","BO":"Bolivia","BQ":"Bonaire, Sint Eustatius and Saba","BA":"Bosnia and Herzegovina","BW":"Botswana","BV":"Bouvet Island","BR":"Brazil","IO":"British Indian Ocean Territory","BN":"Brunei Darussalam","BG":"Bulgaria","BF":"Burkina Faso","BI":"Burundi","CV":"Cabo Verde","KH":"Cambodia","CM":"Cameroon","CA":"Canada","KY":"Cayman Islands","CF":"Central African Republic","TD":"Chad","CL":"Chile","CN":"China","CX":"Christmas Island","CC":"Cocos (Keeling) Islands","CO":"Colombia","KM":"Comoros","CD":"Congo (the Democratic Republic of the)","CG":"Congo","CK":"Cook Islands","CR":"Costa Rica","HR":"Croatia","CU":"Cuba","CW":"Curaçao","CY":"Cyprus","CZ":"Czechia","CI":"Côte d'Ivoire","DK":"Denmark","DJ":"Djibouti","DM":"Dominica","DO":"Dominican Republic","EC":"Ecuador","EG":"Egypt","SV":"El Salvador","GQ":"Equatorial Guinea","ER":"Eritrea","EE":"Estonia","SZ":"Eswatini","ET":"Ethiopia","FK":"Falkland Islands","FO":"Faroe Islands","FJ":"Fiji","FI":"Finland","FR":"France","GF":"French Guiana","PF":"French Polynesia","TF":"French Southern Territories","GA":"Gabon","GM":"Gambia","GE":"Georgia","DE":"Germany","GH":"Ghana","GI":"Gibraltar","GR":"Greece","GL":"Greenland","GD":"Grenada","GP":"Guadeloupe","GU":"Guam","GT":"Guatemala","GG":"Guernsey","GN":"Guinea","GW":"Guinea-Bissau","GY":"Guyana","HT":"Haiti","HM":"Heard Island and McDonald Islands","VA":"Holy See","HN":"Honduras","HK":"Hong Kong","HU":"Hungary","IS":"Iceland","IN":"India","ID":"Indonesia","IR":"Iran","IQ":"Iraq","IE":"Ireland","IM":"Isle of Man","IL":"Israel","IT":"Italy","JM":"Jamaica","JP":"Japan","JE":"Jersey","JO":"Jordan","KZ":"Kazakhstan","KE":"Kenya","KI":"Kiribati","KP":"Korea (the Democratic People's Republic of)","KR":"Korea (the Republic of)","KW":"Kuwait","KG":"Kyrgyzstan","LA":"Lao People's Democratic Republic","LV":"Latvia","LB":"Lebanon","LS":"Lesotho","LR":"Liberia","LY":"Libya","LI":"Liechtenstein","LT":"Lithuania","LU":"Luxembourg","MO":"Macao","MG":"Madagascar","MW":"Malawi","MY":"Malaysia","MV":"Maldives","ML":"Mali","MT":"Malta","MH":"Marshall Islands","MQ":"Martinique","MR":"Mauritania","MU":"Mauritius","YT":"Mayotte","MX":"Mexico","FM":"Micronesia","MD":"Moldova","MC":"Monaco","MN":"Mongolia","ME":"Montenegro","MS":"Montserrat","MA":"Morocco","MZ":"Mozambique","MM":"Myanmar","NA":"Namibia","NR":"Nauru","NP":"Nepal","NL":"Netherlands","NC":"New Caledonia","NZ":"New Zealand","NI":"Nicaragua","NE":"Niger","NG":"Nigeria","NU":"Niue","NF":"Norfolk Island","MP":"Northern Mariana Islands","NO":"Norway","OM":"Oman","PK":"Pakistan","PW":"Palau","PS":"Palestine, State of","PA":"Panama","PG":"Papua New Guinea","PY":"Paraguay","PE":"Peru","PH":"Philippines","PN":"Pitcairn","PL":"Poland","PT":"Portugal","PR":"Puerto Rico","QA":"Qatar","MK":"Republic of North Macedonia","RO":"Romania","RU":"Russian Federation","RW":"Rwanda","RE":"Réunion","BL":"Saint Barthélemy","SH":"Saint Helena, Ascension and Tristan da Cunha","KN":"Saint Kitts and Nevis","LC":"Saint Lucia","MF":"Saint Martin","PM":"Saint Pierre and Miquelon","VC":"Saint Vincent and the Grenadines","WS":"Samoa","SM":"San Marino","ST":"Sao Tome and Principe","SA":"Saudi Arabia","SN":"Senegal","RS":"Serbia","SC":"Seychelles","SL":"Sierra Leone","SG":"Singapore","SX":"Sint Maarten","SK":"Slovakia","SI":"Slovenia","SB":"Solomon Islands","SO":"Somalia","ZA":"South Africa","GS":"South Georgia and the South Sandwich Islands","SS":"South Sudan","ES":"Spain","LK":"Sri Lanka","SD":"Sudan","SR":"Suriname","SJ":"Svalbard and Jan Mayen","SE":"Sweden","CH":"Switzerland","SY":"Syrian Arab Republic","TW":"Taiwan","TJ":"Tajikistan","TZ":"Tanzania, United Republic of","TH":"Thailand","TL":"Timor-Leste","TG":"Togo","TK":"Tokelau","TO":"Tonga","TT":"Trinidad and Tobago","TN":"Tunisia","TR":"Turkey","TM":"Turkmenistan","TC":"Turks and Caicos Islands","TV":"Tuvalu","UG":"Uganda","UA":"Ukraine","AE":"United Arab Emirates","GB":"United Kingdom","UM":"United States Minor Outlying Islands","US":"United States","UY":"Uruguay","UZ":"Uzbekistan","VU":"Vanuatu","VE":"Venezuela","VN":"Viet Nam","VG":"Virgin Islands (British)","VI":"Virgin Islands (U.S.)","WF":"Wallis and Futuna","EH":"Western Sahara","YE":"Yemen","ZM":"Zambia","ZW":"Zimbabwe"}[flow.export.documentCountry] || 'Country'
                          - " / "
                          - !expression |
                            {
                              ['PP']: t('pages.document-verification.documentType.passport'),
                              ['ID']: t('pages.document-verification.documentType.government-id'),
                              ['DL']: t('pages.document-verification.documentType.drivers-license'),
                              ['RP']: t('pages.document-verification.documentType.residence-permit')
                            }[flow.export.documentType] || 'Document'

                      - !component as: VisibilityWrapper
                        visible: !expression "!flow?.export?.forcedDocumentType"
                        items:
                          - !component as: a
                            className: CM-linkButton
                            href: "#"
                            onClick: !function "form.addTags(['changeDocumentTypeModal'])"
                            items: !t 'pages.document-verification.changeDocumentType'

          # div document instance ID 
          - !component as: div
            style:
              display: 'none'
            items:
              - !component as: Input
                name: documentInstanceId
                label: "documentInstanceId"

          # front
          - !ref components: acuantUpload
            assureIdRegion: "EU"
            name: idCardFront
            type: document
            side: pages.document-verification.idCardFront.badge
            prevalidationDisabled: !expression "page.storage.get('precheckFailed') || false"
            documentCustomGlare: !expression "50"
            documentCustomDpi: !expression "400"
            documentCustomBlur: !expression "50"
            documentCaptureQuality: DEFAULT
            documentUploadRetries: 3
            status: !expression "page.storage.get('classificationStatus')"
            onRejected: !function page.storage.set('precheckFailed', true);
            prefix: document-verification
            onFinish: !function |
              page.storage.set('precheckFailed', false);

              form.addTags(['waiting_classification']);
              page.storage.set('classificationStatus', null);
              let isWaiting = true;

              clearTimeout(page.storage.get('classification_timeout'))
              page.storage.set('classification_timeout', setTimeout(() => {
                try {
                  if (!isWaiting || !form.data.idCardFront) {
                    return;
                  }
                  // was timeout
                  isWaiting = false;
                  form.removeTags(['waiting_classification']);
                  page.storage.set('classificationStatus', 'ok');
                  flow.function.setClassification({status: 'ok'});
                } catch(e) {}
              }, 20000));

              page.storage.set('classificationStatus', 'pending');
              flow.function.setClassification({status: 'pending'});

              flow.function.uploadDocument({
                  assureIdRegion: globals.assureIdRegion,
                  documentInstanceId: page.storage.get("documentInstanceId"),
                  file: file,
                  side: 'front'
                }).then((result) => {
                  if (!isWaiting || !form.data.idCardFront) {
                    return;
                  }
                  isWaiting = false;
                  form.removeTags(['waiting_classification']);
                  clearTimeout(page.storage.get('classification_timeout'))

                  classNamesTable = utils.getDocumentTypesMap()

                  const isUto = result?.result?.ClassificationDetails?.Front?.CountryCode === 'UTO';
                  console.log('Document classification | country:', result?.result?.ClassificationDetails?.Front?.CountryCode, 'className:', result?.result?.ClassificationDetails?.Front?.ClassName);

                  const country = constants.COUNTRIES_FULL.find(i => i.alpha3Code === result?.result?.ClassificationDetails?.Front?.CountryCode);
                  const className = result?.result?.ClassificationDetails?.Front?.ClassName;
                  if (isUto || country?.alpha2Code === flow?.export?.documentCountry) {
                    // was success
                    flow.function.setClassification({status: 'ok'});
                    page.storage.set('classificationStatus', 'ok');
                  } else {
                    // error
                      if (page.storage.get('classificationWasUsed')) {
                      form.removeTags(['waiting_classification']);
                      page.storage.set('classificationStatus', 'ok');
                      flow.function.setClassification({status: 'ok'});
                    }else{
                      flow.function.setClassification({status: 'fail'});
                      page.storage.set('classificationStatus', 'fail');
                      page.storage.set('idCardFrontError', null);
                      form.changeValue('idCardFront', null);
                      }
                    page.storage.set('classificationWasUsed', true);
                  }
                }, () => {
                  form.changeValue('documentInstanceId',  null);
                  clearTimeout(page.storage.get('classification_timeout'))
                  flow.function.setClassification({status: 'fail'});
                  page.storage.set('classificationStatus', 'fail');
                  page.storage.set('idCardFrontError', null);
                  form.changeValue('idCardFront', null);
                  form.removeTags(['waiting_classification']);
                });
            uri: document-verification

          # back
          - !component as: VisibilityWrapper
            visible: !expression |
              (([] || []).includes(flow.export?.documentCountry) || false) && ['ID', 'DL'].includes(flow.export?.documentType)
            items:
              - !ref components: acuantUpload
                assureIdRegion: "EU"
                name: idCardBack
                type: document
                side: pages.document-verification.idCardBack.badge
                prevalidationDisabled: !expression "page.storage.get('precheckFailedBack') || false"
                documentCustomGlare: !expression "50"
                documentCustomDpi: !expression "400"
                documentCustomBlur: !expression "50"
                documentCaptureQuality: DEFAULT
                documentUploadRetries: 3
                status: !expression "page.storage.get('classificationStatusBack')"
                onRejected: !function page.storage.set('precheckFailedBack', true);
                prefix: document-verification
                onFinish: !function |
                  page.storage.set('precheckFailedBack', false);
                  form.addTags(['waiting_classification']);
                  page.storage.set('classificationStatusBack', null);
                  let isWaiting = true;

                  clearTimeout(page.storage.get('classification_timeout_back'))
                  page.storage.set('classification_timeout_back', setTimeout(() => {
                    try {
                      if (!isWaiting || !form.data.idCardBack) {
                        return;
                      }
                      // was timeout
                      isWaiting = false;
                      form.removeTags(['waiting_classification']);
                      page.storage.set('classificationStatusBack', 'ok');
                      flow.function.setClassificationBack({status: 'ok'});
                    } catch(e) {}
                  }, 20000));

                  page.storage.set('classificationStatusBack', 'pending');
                  flow.function.setClassificationBack({status: 'pending'});
                  flow.function.uploadDocument({
                      assureIdRegion: globals.assureIdRegion,
                      documentInstanceId: page.storage.get("documentInstanceId"),
                      file: file,
                      side: 'back'
                    }).then((result) => {
                      if (!isWaiting || !form.data.idCardBack) {
                        return;
                      }
                      isWaiting = false;
                      form.removeTags(['waiting_classification']);
                      clearTimeout(page.storage.get('classification_timeout_back'))
                      classNamesTable = utils.getDocumentTypesMap()
                      const isUto = result?.result?.ClassificationDetails?.Back?.CountryCode === 'UTO';
                      console.log('Document classification | country:', result?.result?.ClassificationDetails?.Back?.CountryCode, 'className:', result?.result?.ClassificationDetails?.Back?.ClassName);

                      const country = constants.COUNTRIES_FULL.find(i => i.alpha3Code === result?.result?.ClassificationDetails?.Back?.CountryCode);
                      const className = result?.result?.ClassificationDetails?.Back?.ClassName;
                      if (isUto || country?.alpha2Code === flow?.export?.documentCountry) {
                        // was success
                         flow.function.setClassificationBack({status: 'ok'});
                        page.storage.set('classificationStatusBack', 'ok');
                      } else {
                        // error
                        if (page.storage.get('classificationWasUsedBack')) {
                          form.removeTags(['waiting_classification']);
                          page.storage.set('classificationStatusBack', 'ok');
                           flow.function.setClassificationBack({status: 'ok'});
                        }else{
                              flow.function.setClassificationBack({status: 'fail'});
                              page.storage.set('classificationStatusBack', 'fail');
                              page.storage.set('idCardBackError', null);
                              form.changeValue('idCardBack', null);
                        }
                  page.storage.set('classificationWasUsedBack', true);                     
                      }
                    }, () => {
                      form.changeValue('documentInstanceId',  null);
                      clearTimeout(page.storage.get('classification_timeout_back'))
                       flow.function.setClassificationBack({status: 'fail'});
                      page.storage.set('classificationStatusBack', 'fail');
                      page.storage.set('idCardBackError', null);
                      form.changeValue('idCardBack', null);
                      form.removeTags(['waiting_classification']);
                      
                    });
                uri: document-verification

          # selfie
          - !component as: hr

          - !component as: Heading
            items: !t "pages.document-verification.selfieTitle"

          - !ref components: acuantUpload
            assureIdRegion: "EU"
            name: selfie
            type: selfie
            side: pages.document-verification.selfie.badge
            status: ok
            disabled: !expression "!form.data.idCardFront || (!form.data.idCardBack && backRequired)"
            prefix: document-verification
            uri: document-verification
            onFinish: !function |
              flow.function.setClassificationSelfie({status: 'ok'});

          # submit
          - !component as: SubmitButton
            actionName: flowSubmit
            disabled: !expression |
              (function() {
                const backRequired = (([] || []).includes(flow.export?.documentCountry) || false) && ['ID', 'DL'].includes(flow.export?.documentType);
                return form.hasTags(['waiting_classification']) || !form.data.idCardFront || !form.data.selfie || (!form.data.idCardBack && backRequired);
              })()
            text: !t "common.continue"

      # readonly
      - !component as: VisibilityWrapper
        visible: !expression "(!device.isMobile || (device.isDesktop && false)) &&
          !form.hasTags(['handoffBypass'])"
        items:
          - !component as: Interval
            tick: !function "if
              (flow.namespace.results?.handoff?.previews?.['document-verificati\
              on' + 'idCardBack']) {form.removeTags(['handoffOpenModal'])}"
            interval: 2000

          # document
          - !component as: Heading
            items: !expression "t('pages.document-verification.documentTitle', { label:
              form.data.idCardLabel })"

          # show document type
          - !component as: div
            className: "row"
            items:
              - !component as: Icon
                kind: !expression |
                  {
                    ['PP']: 'doc-passport',
                    ['ID']: 'doc-id',
                    ['DL']: 'doc-license',
                    ['RP']:  'doc-residence'
                  }[flow?.export.documentType]
                size: 40
                className: documentIcon
              - !component as: div
                className: switchDocument
                items:
                  - !component as: div
                    className: switchDocument-name
                    items:
                      - !expression |
                        {"AF":"Afghanistan","AL":"Albania","DZ":"Algeria","AS":"American Samoa","AD":"Andorra","AO":"Angola","AI":"Anguilla","AQ":"Antarctica","AG":"Antigua and Barbuda","AR":"Argentina","AM":"Armenia","AW":"Aruba","AU":"Australia","AT":"Austria","AX":"Åland Islands","AZ":"Azerbaijan","BS":"Bahamas","BH":"Bahrain","BD":"Bangladesh","BB":"Barbados","BY":"Belarus","BE":"Belgium","BZ":"Belize","BJ":"Benin","BM":"Bermuda","BT":"Bhutan","BO":"Bolivia","BQ":"Bonaire, Sint Eustatius and Saba","BA":"Bosnia and Herzegovina","BW":"Botswana","BV":"Bouvet Island","BR":"Brazil","IO":"British Indian Ocean Territory","BN":"Brunei Darussalam","BG":"Bulgaria","BF":"Burkina Faso","BI":"Burundi","CV":"Cabo Verde","KH":"Cambodia","CM":"Cameroon","CA":"Canada","KY":"Cayman Islands","CF":"Central African Republic","TD":"Chad","CL":"Chile","CN":"China","CX":"Christmas Island","CC":"Cocos (Keeling) Islands","CO":"Colombia","KM":"Comoros","CD":"Congo (the Democratic Republic of the)","CG":"Congo","CK":"Cook Islands","CR":"Costa Rica","HR":"Croatia","CU":"Cuba","CW":"Curaçao","CY":"Cyprus","CZ":"Czechia","CI":"Côte d'Ivoire","DK":"Denmark","DJ":"Djibouti","DM":"Dominica","DO":"Dominican Republic","EC":"Ecuador","EG":"Egypt","SV":"El Salvador","GQ":"Equatorial Guinea","ER":"Eritrea","EE":"Estonia","SZ":"Eswatini","ET":"Ethiopia","FK":"Falkland Islands","FO":"Faroe Islands","FJ":"Fiji","FI":"Finland","FR":"France","GF":"French Guiana","PF":"French Polynesia","TF":"French Southern Territories","GA":"Gabon","GM":"Gambia","GE":"Georgia","DE":"Germany","GH":"Ghana","GI":"Gibraltar","GR":"Greece","GL":"Greenland","GD":"Grenada","GP":"Guadeloupe","GU":"Guam","GT":"Guatemala","GG":"Guernsey","GN":"Guinea","GW":"Guinea-Bissau","GY":"Guyana","HT":"Haiti","HM":"Heard Island and McDonald Islands","VA":"Holy See","HN":"Honduras","HK":"Hong Kong","HU":"Hungary","IS":"Iceland","IN":"India","ID":"Indonesia","IR":"Iran","IQ":"Iraq","IE":"Ireland","IM":"Isle of Man","IL":"Israel","IT":"Italy","JM":"Jamaica","JP":"Japan","JE":"Jersey","JO":"Jordan","KZ":"Kazakhstan","KE":"Kenya","KI":"Kiribati","KP":"Korea (the Democratic People's Republic of)","KR":"Korea (the Republic of)","KW":"Kuwait","KG":"Kyrgyzstan","LA":"Lao People's Democratic Republic","LV":"Latvia","LB":"Lebanon","LS":"Lesotho","LR":"Liberia","LY":"Libya","LI":"Liechtenstein","LT":"Lithuania","LU":"Luxembourg","MO":"Macao","MG":"Madagascar","MW":"Malawi","MY":"Malaysia","MV":"Maldives","ML":"Mali","MT":"Malta","MH":"Marshall Islands","MQ":"Martinique","MR":"Mauritania","MU":"Mauritius","YT":"Mayotte","MX":"Mexico","FM":"Micronesia","MD":"Moldova","MC":"Monaco","MN":"Mongolia","ME":"Montenegro","MS":"Montserrat","MA":"Morocco","MZ":"Mozambique","MM":"Myanmar","NA":"Namibia","NR":"Nauru","NP":"Nepal","NL":"Netherlands","NC":"New Caledonia","NZ":"New Zealand","NI":"Nicaragua","NE":"Niger","NG":"Nigeria","NU":"Niue","NF":"Norfolk Island","MP":"Northern Mariana Islands","NO":"Norway","OM":"Oman","PK":"Pakistan","PW":"Palau","PS":"Palestine, State of","PA":"Panama","PG":"Papua New Guinea","PY":"Paraguay","PE":"Peru","PH":"Philippines","PN":"Pitcairn","PL":"Poland","PT":"Portugal","PR":"Puerto Rico","QA":"Qatar","MK":"Republic of North Macedonia","RO":"Romania","RU":"Russian Federation","RW":"Rwanda","RE":"Réunion","BL":"Saint Barthélemy","SH":"Saint Helena, Ascension and Tristan da Cunha","KN":"Saint Kitts and Nevis","LC":"Saint Lucia","MF":"Saint Martin","PM":"Saint Pierre and Miquelon","VC":"Saint Vincent and the Grenadines","WS":"Samoa","SM":"San Marino","ST":"Sao Tome and Principe","SA":"Saudi Arabia","SN":"Senegal","RS":"Serbia","SC":"Seychelles","SL":"Sierra Leone","SG":"Singapore","SX":"Sint Maarten","SK":"Slovakia","SI":"Slovenia","SB":"Solomon Islands","SO":"Somalia","ZA":"South Africa","GS":"South Georgia and the South Sandwich Islands","SS":"South Sudan","ES":"Spain","LK":"Sri Lanka","SD":"Sudan","SR":"Suriname","SJ":"Svalbard and Jan Mayen","SE":"Sweden","CH":"Switzerland","SY":"Syrian Arab Republic","TW":"Taiwan","TJ":"Tajikistan","TZ":"Tanzania, United Republic of","TH":"Thailand","TL":"Timor-Leste","TG":"Togo","TK":"Tokelau","TO":"Tonga","TT":"Trinidad and Tobago","TN":"Tunisia","TR":"Turkey","TM":"Turkmenistan","TC":"Turks and Caicos Islands","TV":"Tuvalu","UG":"Uganda","UA":"Ukraine","AE":"United Arab Emirates","GB":"United Kingdom","UM":"United States Minor Outlying Islands","US":"United States","UY":"Uruguay","UZ":"Uzbekistan","VU":"Vanuatu","VE":"Venezuela","VN":"Viet Nam","VG":"Virgin Islands (British)","VI":"Virgin Islands (U.S.)","WF":"Wallis and Futuna","EH":"Western Sahara","YE":"Yemen","ZM":"Zambia","ZW":"Zimbabwe"}[flow.export.documentCountry]
                      - " / "
                      - !expression |
                        {
                          ['PP']: t('pages.document-verification.documentType.passport'),
                          ['ID']: t('pages.document-verification.documentType.government-id'),
                          ['DL']: t('pages.document-verification.documentType.drivers-license'),
                          ['RP']: t('pages.document-verification.documentType.residence-permit')
                        }[flow.export.documentType]

                  - !component as: VisibilityWrapper
                    visible: !expression "!flow?.export?.forcedDocumentType"
                    items:
                      - !component as: a
                        className: CM-linkButton
                        href: "#"
                        onClick: !function "form.addTags(['changeDocumentTypeModal'])"
                        items:
                          - !t 'pages.document-verification.changeDocumentType'

          # front
          - !ref components: imagePreview
            type: id
            side: pages.document-verification.idCardFront.badge
            name: idCardFront
            status: !expression "flow.namespace.results?.handoff?.classificationStatus ||
              'waiting'"
            uuid: !expression "flow.namespace.results?.handoff?.previews?.['document-verifi\
              cation' + 'idCardFront']?.uuid"
            uri: document-verification

          # back
          - !component as: VisibilityWrapper
            visible: !expression |
              (([] || []).includes(flow.export?.documentCountry) || false) && ['ID', 'DL'].includes(flow.export?.documentType)
            items:
              - !ref components: imagePreview
                type: id
                side: pages.document-verification.idCardBack.badge
                name: idCardBack
                status: !expression "flow.namespace.results?.handoff?.classificationStatusBack
                  || 'waiting'"
                uuid: !expression "flow.namespace.results?.handoff?.previews?.['document-verifi\
                  cation' + 'idCardBack']?.uuid"
                uri: document-verification

          # selfie
          - !component as: hr

          - !component as: Heading
            items: !t "pages.document-verification.selfieTitle"

          - !ref components: imagePreview
            uri: document-verification
            type: selfie
            name: selfie
            side: pages.document-verification.selfie.badge
            status: !expression "flow.namespace.results?.handoff?.classificationStatusSelfie
              || 'waiting'"
            uuid: !expression "flow.namespace.results?.handoff?.previews?.['document-verifi\
              cation' + 'selfie']?.uuid"

          # submit
          - !component as: Button
            disabled: true
            text: !t "common.continue"
  # modal with qr code
  - !component as: Trigger
    load: !function |
      page.storage.set('numberOfSmsTriesdocument-verification', 11);
  - !component as: VisibilityWrapper
    visible: !expression "locals?.handoffPage && device.isDesktop &&
      !form.hasTags(['handoffBypass'])"
    items:
      - !component as: Modal
        tag: handoffOpenModal
        closeButton: false
        className: handoffOpenModal
        items:
          - !component as: Heading
            items: !expression |
              {
                ['PP']: t('pages.document-verification.documentType.title.passport'),
                ['ID']: t('pages.document-verification.documentType.title.government-id'),
                ['DL']: t('pages.document-verification.documentType.title.drivers-license'),
                ['RP']: t('pages.document-verification.documentType.title.residence-permit')
              }[flow.export.documentType]
          - !component as: Paragraph
            items: !t "pages.document-verification.handoff.openText"
          - !component as: div
            className: row
            items:
              - !component as: VisibilityWrapper
                visible: !expression "false && form.hasTags(['showSendSMS'])"
                items:
                  - !component as: div
                    className: col col-centered
                    items:
                      - !component as: Heading
                        items: !t "pages.document-verification.handoff.sendSms"
                        kind: "h2"
                      - !component as: PhoneInput
                        name: handoffMobile
                        country: !expression "flow.export?.country ? flow.export?.country :
                          window.COUNTRY"
                        delimiter: "-"
                        tidy: "phoneNumber"
                        validateFormat: true
                        formatErrorText: !t "pages.document-verification.handoff.invalidMobile"
                      - !component as: DelayedRepeatButton
                        initialTime: 30
                        loading: !expression "app.waiting.sendHandoffSms"
                        onClick: !function |
                          if (app.waiting.sendHandoffSms || !form.field.handoffMobile.isValid) {
                            return;
                          }
                          try {
                            grecaptcha.enterprise.ready(function() {
                              grecaptcha.enterprise.execute(globals.recaptchaSiteKey, {action: 'submit'}).then((token) => {
                                (async function() {
                                  try {
                                    const smsResult = await flow.function.sendHandoffSms({ language: app.locale, mobile: form.data.handoffMobile, token: flow.execution.token, recaptchaToken: token });
                                    analytics.event('Sent', { field: 'SMS' });

                                    // set this value depending on result of function
                                    page.storage.set('numberOfSmsTriesdocument-verification',smsResult.result);
                                  } catch(e) {
                                    console.log('Sending sms failed with error', e);
                                  }
                                })();
                              });
                            });
                          } catch(e) {
                            console.log("Error when validating recaptcha token: " + e)
                          }
                        disabled: !expression "!form.field.handoffMobile.isFilled ||
                          !form.field.handoffMobile.isValid ||
                          page.storage.get('numberOfSmsTriesdocument-verificati\
                          on') <= 1"
                        text: !t "pages.document-verification.handoff.sendSmsButton"
                        repeatText: !t "pages.document-verification.handoff.sendSmsAgainButton"
                  - !component as: div
                    className: col
                    items:
                      - !component as: div
                        className: or
                        items: !t "pages.document-verification.handoff.or"
              - !component as: div
                className: col col--centered
                items:
                  - !component as: Heading
                    kind: "h2"
                    centered: true
                    items: !t "pages.document-verification.handoff.scanQRCode"
                  - !component as: div
                    className: "qrWrapper"
                    items:
                      - !component as: QRCode
                        size: 200
                        padding: 0
                        text: !expression "window.location.protocol + '//' + window.location.host +
                          window.location.pathname + '?uuid=' +
                          flow.execution.uuid + '&token=' +
                          flow.execution.token"
          - !component as: div
            className: row
            items:
              - !component as: VisibilityWrapper
                visible: false
                items:
                  - !component as: div
                    className: col
                    items:
                      - !component as: a
                        className: text--centered
                        onClick: !function "form.addTags(['handoffBypass']);"
                        items: !t "pages.document-verification.handoff.dontOwnSmartphone"
