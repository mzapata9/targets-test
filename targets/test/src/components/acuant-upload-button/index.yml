#
# Required props:
#  - name - name of document (eg. idCardFront)
#  - type - type of document (eg. document)
#  - text - button text
#
#
styles:
  - !include ./acuant-upload.less
!component as: Fragment
items:
  # initialize instance of SDK
  - !component as: Trigger
    load:
      !function eval: |
        (async function() {

          if (!window.AcuantUpload) {
            window.AcuantUploadHandler = (new Function(acuantUpload))()
          }

          let result = {}

          if(!page.storage.get(`instance-${fieldName}-${documentType}.assureIdOAuth`)) {

            if(page.storage.get("assureIdOAuthToken")) {

              result = {
                token: page.storage.get("assureIdOAuthToken"),
                url: page.storage.get("assureIdOAuthUrl"),
                authType: "BEARER",
              }

            } else {

              try {
                let response = await flow.function.getAssureIdOAuthToken({assureIdRegion: globals.assureIdRegion, authType: "BEARER"})
                
                page.storage.set(`instance-${fieldName}-${documentType}.assureIdOAuth`, response.result)
                  
                if(!response.result.token || !response.result.url) {
                  console.error("Token or URL missing...")
                  return
                }

                result = response.result

              } catch(err) {
                console.error("getAssureIdOAuthToken error: ", err)
              }
              
            }

            page.storage.set(`instance-${fieldName}-${documentType}`,
                new window.AcuantUploadHandler(fieldName, documentType, {
                  storageSet,
                  setVisited,
                  getFileHolder,
                  wrapByLoading,
                  changeValue,
                  analyticsCustomEvent,
                }, {
                  disableImagePrevalidation,
                  documentCustomGlare,
                  documentCustomDpi,
                  documentCustomBlur,
                  documentSelected,
                  documentCaptureQuality,
                  documentUploadRetries,
                  credentials,
                  scriptSrc,
                  messages,
                  textOptions,
                  faceTextOptions,
                  onAccepted,
                  onImageCaptured,
                  onImageCropFailed,
                  onImageCropped,
                  onRejected,
                }, result)
              )
          }
        })()

      # files
      acuantUpload: !include 'acuant-upload.js'
      # helpers
      storageSet: !expression page.storage.set
      setVisited:
        !function eval: form.setVisited(fieldName)
        fieldName: !property name
      getFileHolder: !expression helper.getFileHolder
      wrapByLoading: !expression app.wrapByLoading
      changeValue: !expression form.changeValue
      analyticsCustomEvent: !expression analytics.customEvent
      # SDK options
      fieldName: !property name
      documentType: !property type
      disableImagePrevalidation:
        !property name: disableImagePrevalidation
        default: !expression undefined
      documentCustomGlare:
        !property name: documentCustomGlare
        default: !expression undefined
      documentSelected:
        !property name: documentSelected
        default: !expression undefined
      documentCustomDpi:
        !property name: documentCustomDpi
        default: !expression undefined
      documentCustomBlur:
        !property name: documentCustomBlur
        default: !expression undefined
      documentCaptureQuality:
        !property name: documentCaptureQuality
        default: !expression undefined
      documentUploadRetries:
        !property name: documentUploadRetries
        default: !expression undefined
      credentials:
        !property name: credentials
        default: !expression undefined
      scriptSrc:
        !property name: scriptSrc
        default: !expression undefined
      messageBlurry:
        !property name: messageBlurry
        default: !expression undefined
      messageEnsure:
        !property name: messageEnsure
        default: !expression undefined
      messageHasGlare:
        !property name: messageHasGlare
        default: !expression undefined
      messageGeneralFail:
        !property name: messageGeneralFail
        default: !expression undefined
      messageLowQuality:
        !property name: messageLowQuality
        default: !expression undefined
      messages:
        !property name: messages
        default: !expression undefined
      textOptions:
        !property name: textOptions
        default: !expression undefined
      faceTextOptions:
        !property name: faceTextOptions
        default: !expression undefined
      onAccepted:
        !property name: onAccepted
        default: !expression undefined
      onImageCaptured:
        !property name: onImageCaptured
        default: !expression undefined
      onImageCropFailed:
        !property name: onImageCropFailed
        default: !expression undefined
      onImageCropped:
        !property name: onImageCropped
        default: !expression undefined
      onRejected:
        !property name: onRejected
        default: !expression undefined
  # div error renderer
  - !component as: VisibilityWrapper
    visible:
        !expression eval: |
          page.storage.get(`instance-${fieldName}-${documentType}.errorInitializing`)
        fieldName: !property name
        documentType: !property type
    items:
        - !component as: Paragraph
          items: !t 'pages.document.statusFailedConection'
        - !component as: VisibilityWrapper
          visible: !expression "(device.isMobile && !flow.export.startedOnDesktop) || device.isDesktop"
          items:
              - !component as: a
                items: !t "common.footer.resetButton"
                onClick: !function |
                    const cookieName = 'last-flow'
                    const pathname = window.location.pathname
                    // clear cookie
                    document.cookie = `${cookieName}=; Path=${pathname}; Expires=Thu, 01 Jan 1970 00:00:01 GMT;`;
                    flow.reload()  
   # Button renderer
  - !component as: VisibilityWrapper
    visible:
        !expression eval: |
          !page.storage.get(`instance-${fieldName}-${documentType}.errorInitializing`)
        fieldName: !property name
        documentType: !property type
    items:
      - !component as: Button
        disabled:
          !expression eval: |
            !page.storage.get(`instance-${fieldName}-${documentType}.initialized`) ||
            page.storage.get(`instance-${fieldName}-${documentType}.initializing`)
          fieldName: !property name
          documentType: !property type
        type: button
        text: !property text
        onClick:
          !function eval: page.storage.get(`instance-${fieldName}-${documentType}`).openCamera()
          fieldName: !property name
          documentType: !property type

  # selfie div
  - !component as: div
    !condition include: type === "selfie"
    className: 'fileUpload acuant-camera'
    id: acuant-face-capture-container
    style:
      display:
        !expression eval: "page.storage.get(`instance-${fieldName}-${documentType}.cameraOpened`) ? 'block' : 'none'"
        fieldName: !property name
        documentType: !property type
    items:
      - !component as: div
        className: 'fileUpload liveness-status'
        items:
          - !expression eval: page.storage.get(`instance-${fieldName}-${documentType}.livenessStatus`)
            fieldName: !property name
            documentType: !property type
  # document div
  - !component as: div
    !condition include: type === "document"
    className: 'fileUpload acuant-camera'
    style:
      display:
        !expression eval: "page.storage.get(`instance-${fieldName}-${documentType}.cameraOpened`) ? 'block' : 'none'"
        fieldName: !property name
        documentType: !property type
    items:
      - !component as: div
        # Here we can add height and width property for custom camera dimensions
        id: 'acuant-camera'
